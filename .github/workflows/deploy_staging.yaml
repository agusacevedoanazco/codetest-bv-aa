name: Deploy to STAGING

on:
  workflow_call:

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform cli
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.8.2"

      - name: Setup terraform variables
        id: vars
        working-directory: ./infrastructure/staging
        run: |
          cat > terraform.tfvars <<EOF
          gcp-project="${{ vars.GCP_PROJECT }}"
          bv-ms-img="${{ vars.CR_IMG }}"
          endpoint-url="${{ vars.ENDPOINT_URL }}"
          EOF

      # - name: :DEBUG print tfvars
      #   working-directory: ./infrastructure/staging
      #   run: |
      #     cat terraform.tfvars

      - name: Decode base64 service-account
        env:
          BASE64_SA: ${{ secrets.GCP_SA }}
        working-directory: ./infrastructure/staging
        run: |
          echo "$BASE64_SA" | base64 --decode > credentials.json

      - name: Terraform init
        working-directory: ./infrastructure/staging
        run: terraform init
        env:
          GOOGLE_APPLICATION_CREDENTIALS: credentials.json

      - name: Terraform validate
        working-directory: ./infrastructure/staging
        run: terraform validate
        env:
          GOOGLE_APPLICATION_CREDENTIALS: credentials.json
          GOOGLE_CLOUD_PROJECT: ${{ vars.GCP_PROJECT }}

      - name: Terraform plan
        working-directory: ./infrastructure/staging
        # run: terraform plan -no-color -out=plan
        run: terraform plan -no-color -out=plan-staging
        env:
          GOOGLE_APPLICATION_CREDENTIALS: credentials.json
          GOOGLE_CLOUD_PROJECT: ${{ vars.GCP_PROJECT }}

      - name: Terraform apply
        id: tfapply
        working-directory: ./infrastructure/staging
        run: terraform apply plan-staging
        env:
          GOOGLE_APPLICATION_CREDENTIALS: credentials.json
          GOOGLE_CLOUD_PROJECT: ${{ vars.GCP_PROJECT }}
